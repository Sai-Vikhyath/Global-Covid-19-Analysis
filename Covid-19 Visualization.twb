<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Power BI Table 1)' inline='true' name='federated.0g6n95p0imrzn81c2x41w1ac77mn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Power BI Table 1' name='excel-direct.1b4y1w10t2206t1alyfe31xxm62j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/resumes/Projects and docx of DA Resume/YT Alex The Analyst/Data Analyst Portfolio Porject - 1(SQL Exploration)/Power BI Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1b4y1w10t2206t1alyfe31xxm62j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4EB4653E569142049B4F94947FB709DD]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/LEGION/AppData/Local/Temp/TableauTemp/#TableauTemp_01tmj4d0j3o7ll17zrfoy0ubjsqj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/17/2025 11:13:58 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4EB4653E569142049B4F94947FB709DD]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4EB4653E569142049B4F94947FB709DD'>
            <properties context=''>
              <relation connection='excel-direct.1b4y1w10t2206t1alyfe31xxm62j' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Power BI table 2)' inline='true' name='federated.0l45n7w0n237rz14k8zw119dvntx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Power BI table 2' name='excel-direct.08pbf8h1cnxuao15tiy6v0o34ecl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/resumes/Projects and docx of DA Resume/YT Alex The Analyst/Data Analyst Portfolio Porject - 1(SQL Exploration)/Power BI table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08pbf8h1cnxuao15tiy6v0o34ecl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D5439CFCFB3445CF98DEF686B902B8D9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D5439CFCFB3445CF98DEF686B902B8D9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D5439CFCFB3445CF98DEF686B902B8D9]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/LEGION/AppData/Local/Temp/TableauTemp/#TableauTemp_1q42of811b6l5k15a29dx01b1a95.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/17/2025 11:14:14 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_D5439CFCFB3445CF98DEF686B902B8D9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D5439CFCFB3445CF98DEF686B902B8D9]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D5439CFCFB3445CF98DEF686B902B8D9'>
            <properties context=''>
              <relation connection='excel-direct.08pbf8h1cnxuao15tiy6v0o34ecl' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Power BI Table 3)' inline='true' name='federated.17ivwo10s1aue11arofod0zlmgzi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Power BI Table 3' name='excel-direct.0il888s0d6o4hh14dy3gx1cbqqp0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/resumes/Projects and docx of DA Resume/YT Alex The Analyst/Data Analyst Portfolio Porject - 1(SQL Exploration)/Power BI Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0il888s0d6o4hh14dy3gx1cbqqp0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_238ECA877A384FDDB984763C79F5C629]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/LEGION/AppData/Local/Temp/TableauTemp/#TableauTemp_02fcjf71u6tsj91dw3yy617nz8ct.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/17/2025 11:14:27 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_238ECA877A384FDDB984763C79F5C629]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_238ECA877A384FDDB984763C79F5C629'>
            <properties context=''>
              <relation connection='excel-direct.0il888s0d6o4hh14dy3gx1cbqqp0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Power BI Table 4)' inline='true' name='federated.06vv3pz0tmf86y142z8b01gy4yea' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Power BI Table 4' name='excel-direct.1grvm7805my22r1ci2do319xoyy3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/resumes/Projects and docx of DA Resume/YT Alex The Analyst/Data Analyst Portfolio Porject - 1(SQL Exploration)/Power BI Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1grvm7805my22r1ci2do319xoyy3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/LEGION/AppData/Local/Temp/TableauTemp/#TableauTemp_06ma9d818iqcm410ssj2o07dwgq0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/17/2025 11:14:42 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1175</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_7A2E0F24D8764C2795129BF3C4E974AE]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7A2E0F24D8764C2795129BF3C4E974AE'>
            <properties context=''>
              <relation connection='excel-direct.1grvm7805my22r1ci2do319xoyy3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true' underline='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Power BI Table 1)' name='federated.0g6n95p0imrzn81c2x41w1ac77mn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g6n95p0imrzn81c2x41w1ac77mn'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]' value='195' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='background-color' scope='cols' value='#2d8ac8' />
            <format attr='height' field='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]' value='bold' />
            <format attr='font-style' field='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]' value='italic' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='2' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0g6n95p0imrzn81c2x41w1ac77mn].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0g6n95p0imrzn81c2x41w1ac77mn].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.5082871913909912' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{74F39F6F-2A0C-425E-BE67-7F31C22F673C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true' underline='true'>Total Deaths Across Globe</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Power BI table 2)' name='federated.0l45n7w0n237rz14k8zw119dvntx' />
          </datasources>
          <datasource-dependencies datasource='federated.0l45n7w0n237rz14k8zw119dvntx'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0l45n7w0n237rz14k8zw119dvntx].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-style' data-class='subtotal' scope='cols' value='italic' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='width' field='[federated.0l45n7w0n237rz14k8zw119dvntx].[none:location:nk]' value='104' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-style' data-class='subtotal' scope='cols' value='italic' />
            <format attr='height-header' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-style' scope='cols' value='italic' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-style' scope='rows' value='italic' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l45n7w0n237rz14k8zw119dvntx].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0l45n7w0n237rz14k8zw119dvntx].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9A8BB756-53AA-4114-8D67-925DC8EF5864}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Population Infected Per Country</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Power BI Table 3)' name='federated.17ivwo10s1aue11arofod0zlmgzi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17ivwo10s1aue11arofod0zlmgzi'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17ivwo10s1aue11arofod0zlmgzi].[Longitude (generated)]' field-type='quantitative' max='26487714.675476559' min='-13302457.404733' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17ivwo10s1aue11arofod0zlmgzi].[Latitude (generated)]' field-type='quantitative' max='12105425.663612716' min='-7202592.7265050532' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run bold='true' italic='true'>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.17ivwo10s1aue11arofod0zlmgzi].[none:Location:nk]' />
              <color column='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.17ivwo10s1aue11arofod0zlmgzi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7051a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17ivwo10s1aue11arofod0zlmgzi].[Latitude (generated)]</rows>
        <cols>[federated.17ivwo10s1aue11arofod0zlmgzi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BB009158-582F-40C2-8C56-820C18AD9E7E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Power BI Table 4)' name='federated.06vv3pz0tmf86y142z8b01gy4yea' />
          </datasources>
          <datasource-dependencies datasource='federated.06vv3pz0tmf86y142z8b01gy4yea'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.06vv3pz0tmf86y142z8b01gy4yea].[tqr:date:qk]' scope='cols' value='Month-Year' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06vv3pz0tmf86y142z8b01gy4yea].[tqr:date:qk]' value='163' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]' />
              <text column='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]' />
              <color column='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]' />
              <text column='[federated.06vv3pz0tmf86y142z8b01gy4yea].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06vv3pz0tmf86y142z8b01gy4yea].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.06vv3pz0tmf86y142z8b01gy4yea].[tqr:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C9D7DA31-B45E-46BA-AD5B-7B7A88B9159E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98148' id='8' param='horz' type-v2='layout-flow' w='99086' x='457' y='926'>
            <zone h='98148' id='6' type-v2='layout-basic' w='94226' x='457' y='926'>
              <zone h='13889' id='3' name='Sheet 1' w='34066' x='457' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50694' id='5' name='Sheet 3' w='60160' x='34523' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36805' id='10' name='Sheet 2' w='34066' x='457' y='14815'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47454' id='11' name='Sheet 4' w='94226' x='457' y='51620'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='85' h='98148' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='4860' x='94683' y='926'>
              <zone h='7523' id='9' name='Sheet 3' pane-specification-id='0' param='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' type-v2='color' w='4860' x='94683' y='926'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44676' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]&#10;[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]' type-v2='color' w='4860' x='94683' y='8449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98148' id='15' param='vert' type-v2='layout-flow' w='99086' x='457' y='926'>
                <zone fixed-size='104' h='13889' id='3' is-fixed='true' name='Sheet 1' w='34066' x='457' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50694' id='5' is-fixed='true' name='Sheet 3' w='60160' x='34523' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7523' id='9' name='Sheet 3' pane-specification-id='0' param='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' type-v2='color' w='4860' x='94683' y='926'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36805' id='10' is-fixed='true' name='Sheet 2' w='34066' x='457' y='14815'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47454' id='11' is-fixed='true' name='Sheet 4' w='94226' x='457' y='51620'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='44676' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]&#10;[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]' type-v2='color' w='4860' x='94683' y='8449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F3A12098-FB05-4DFC-B3E0-9B4FEBA3F8D2}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g6n95p0imrzn81c2x41w1ac77mn].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1DDA77A-27D6-47EB-804A-DC9B4BB90FCB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l45n7w0n237rz14k8zw119dvntx].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D42107A0-9900-41A1-8B35-BF2CDE866755}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.17ivwo10s1aue11arofod0zlmgzi].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17ivwo10s1aue11arofod0zlmgzi].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30D40CE4-6789-48C6-9F79-CDCCDDEA7223}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]&#10;[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]</field>
            <field>[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]</field>
            <field>[federated.06vv3pz0tmf86y142z8b01gy4yea].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9B593D6-5B20-4894-A89B-DB35D9FA36CB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Forecast Indicator:nk]</field>
              <field>[federated.06vv3pz0tmf86y142z8b01gy4yea].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9D09AED0-8B90-4B25-801D-DBC4B5826EC5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      cXb+zUP+EuoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
